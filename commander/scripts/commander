#!/usr/bin/env python
import rospy
from std_srvs.srv import *
from commander.srv import *
from commander.commands.AddCameraCommand import AddCameraCommand
from commander.commands.GetCameraCommand import GetCameraCommand
from commander.commands.GetCamerasListCommand import GetCamerasListCommand
from commander.commands.UnknownCommand import UnknownCommand
from commander.commands.RemoveCameraCommand import RemoveCameraCommand

cameras = {}


def commander_callback(request):
    """
    Create process on callback

    :param request: commander.srv arguments.
    :return: commander.srv result.
    """
    if request.command == "camera.add":
        command = AddCameraCommand()
        return command.execute(cameras=cameras, stream_url=request.argument)

    elif request.command == "camera.get":
        command = GetCameraCommand()
        return command.execute(cameras=cameras, id=request.argument)

    elif request.command == "camera.list":
        command = GetCamerasListCommand()
        return command.execute(cameras=cameras)

    elif request.command == "camera.remove":
        command = RemoveCameraCommand()
        return command.execute(cameras=cameras, id=request.argument)

    command = UnknownCommand()
    return command.execute(cameras=cameras)


if __name__ == "__main__":
    rospy.init_node('commander')

    commander_service = rospy.Service(
        'commander', commander, commander_callback)

    rospy.spin()
