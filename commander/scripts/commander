#!/usr/bin/env python
import uuid
import rospy
from std_srvs.srv import *
from commander.srv import *
from commander.AddCameraCommand import AddCameraCommand

cameras = {}


def commander_callback(request):
    """
    Create process on callback

    :param request: commander.srv arguments.
    :return: commander.srv result.
    """
    if request.command == "list":
        result = str()
        for key in cameras.keys():
            result += key + '\n'

        return [result]
    elif request.command == "add":
        key = str(uuid.uuid1()).replace("-", "")
        cameras[key] = AddCameraCommand()
        cameras[key].execute(stream_url=request.argument, namespace=key)

        return ["Camera is added."]
    elif request.command == "remove":
        key = request.argument

        if not key in cameras:
            return ["Camera with this ID does not exist."]

        cameras[key].stop()
        return ["Camera is removed."]
    return ["Unknown"]


if __name__ == "__main__":
    rospy.init_node('commander')

    commander_service = rospy.Service(
        'commander', commander, commander_callback)

    rospy.spin()
